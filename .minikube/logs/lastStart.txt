Log file created at: 2024/06/15 21:15:23
Running on machine: ip-172-31-41-82
Binary: Built with gc go1.22.1 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0615 21:15:23.450451    2171 out.go:291] Setting OutFile to fd 1 ...
I0615 21:15:23.451859    2171 out.go:338] TERM=xterm,COLORTERM=, which probably does not support color
I0615 21:15:23.451862    2171 out.go:304] Setting ErrFile to fd 2...
I0615 21:15:23.451865    2171 out.go:338] TERM=xterm,COLORTERM=, which probably does not support color
I0615 21:15:23.452002    2171 root.go:338] Updating PATH: /home/ubuntu/.minikube/bin
I0615 21:15:23.453320    2171 out.go:298] Setting JSON to false
I0615 21:15:23.456048    2171 start.go:129] hostinfo: {"hostname":"ip-172-31-41-82","uptime":49,"bootTime":1718486075,"procs":446,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"24.04","kernelVersion":"6.8.0-1008-aws","kernelArch":"x86_64","virtualizationSystem":"xen","virtualizationRole":"guest","hostId":"ec25482e-5620-f5dd-891c-182741afed8c"}
I0615 21:15:23.456092    2171 start.go:139] virtualization: xen guest
I0615 21:15:23.459280    2171 out.go:177] * minikube v1.33.1 on Ubuntu 24.04 (xen/amd64)
I0615 21:15:23.464757    2171 notify.go:220] Checking for updates...
I0615 21:15:23.465787    2171 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0615 21:15:23.465852    2171 driver.go:392] Setting default libvirt URI to qemu:///system
I0615 21:15:23.642971    2171 docker.go:122] docker version: linux-24.0.7:
I0615 21:15:23.643044    2171 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0615 21:15:23.661175    2171 info.go:266] docker info: {ID:9480676c-29a1-49bd-8011-10b24b378d6a Containers:5 ContainersRunning:0 ContainersPaused:0 ContainersStopped:5 Images:22 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:22 OomKillDisable:false NGoroutines:35 SystemTime:2024-06-15 21:15:23.654645557 +0000 UTC LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-1008-aws OperatingSystem:Ubuntu 24.04 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:36 MemTotal:63253409792 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:ip-172-31-41-82 Labels:[] ExperimentalBuild:false ServerVersion:24.0.7 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID: Expected:} RuncCommit:{ID: Expected:} InitCommit:{ID: Expected:} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[] Warnings:<nil>}}
I0615 21:15:23.661288    2171 docker.go:295] overlay module found
I0615 21:15:23.664267    2171 out.go:177] * Using the docker driver based on existing profile
I0615 21:15:23.667040    2171 start.go:297] selected driver: docker
I0615 21:15:23.667045    2171 start.go:901] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:15000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/ubuntu:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0615 21:15:23.667100    2171 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0615 21:15:23.667151    2171 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0615 21:15:23.684710    2171 info.go:266] docker info: {ID:9480676c-29a1-49bd-8011-10b24b378d6a Containers:5 ContainersRunning:0 ContainersPaused:0 ContainersStopped:5 Images:22 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:22 OomKillDisable:false NGoroutines:35 SystemTime:2024-06-15 21:15:23.678891469 +0000 UTC LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-1008-aws OperatingSystem:Ubuntu 24.04 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:36 MemTotal:63253409792 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:ip-172-31-41-82 Labels:[] ExperimentalBuild:false ServerVersion:24.0.7 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID: Expected:} RuncCommit:{ID: Expected:} InitCommit:{ID: Expected:} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[] Warnings:<nil>}}
I0615 21:15:23.686408    2171 cni.go:84] Creating CNI manager for ""
I0615 21:15:23.686422    2171 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0615 21:15:23.686463    2171 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:15000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/ubuntu:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0615 21:15:23.691161    2171 out.go:177] * Starting "minikube" primary control-plane node in "minikube" cluster
I0615 21:15:23.693454    2171 cache.go:121] Beginning downloading kic base image for docker with docker
I0615 21:15:23.695862    2171 out.go:177] * Pulling base image v0.0.44 ...
I0615 21:15:23.697388    2171 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0615 21:15:23.697419    2171 preload.go:147] Found local preload: /home/ubuntu/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4
I0615 21:15:23.697423    2171 cache.go:56] Caching tarball of preloaded images
I0615 21:15:23.697449    2171 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon
I0615 21:15:23.697495    2171 preload.go:173] Found /home/ubuntu/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.30.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0615 21:15:23.697500    2171 cache.go:59] Finished verifying existence of preloaded tar for v1.30.0 on docker
I0615 21:15:23.697568    2171 profile.go:143] Saving config to /home/ubuntu/.minikube/profiles/minikube/config.json ...
I0615 21:15:23.719403    2171 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e in local docker daemon, skipping pull
I0615 21:15:23.719415    2171 cache.go:144] gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e exists in daemon, skipping load
I0615 21:15:23.719430    2171 cache.go:194] Successfully downloaded all kic artifacts
I0615 21:15:23.719460    2171 start.go:360] acquireMachinesLock for minikube: {Name:mk923ca0cafdb7abb02570da09080d5be8735c7e Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0615 21:15:23.721849    2171 start.go:364] duration metric: took 2.373386ms to acquireMachinesLock for "minikube"
I0615 21:15:23.721865    2171 start.go:96] Skipping create...Using existing machine configuration
I0615 21:15:23.721868    2171 fix.go:54] fixHost starting: 
I0615 21:15:23.722057    2171 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0615 21:15:23.742620    2171 fix.go:112] recreateIfNeeded on minikube: state=Stopped err=<nil>
W0615 21:15:23.742629    2171 fix.go:138] unexpected machine state, will restart: <nil>
I0615 21:15:23.746805    2171 out.go:177] * Restarting existing docker container for "minikube" ...
I0615 21:15:23.748482    2171 cli_runner.go:164] Run: docker start minikube
I0615 21:15:24.163216    2171 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0615 21:15:24.176385    2171 kic.go:430] container "minikube" state is running.
I0615 21:15:24.177767    2171 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0615 21:15:24.191341    2171 profile.go:143] Saving config to /home/ubuntu/.minikube/profiles/minikube/config.json ...
I0615 21:15:24.191497    2171 machine.go:94] provisionDockerMachine start ...
I0615 21:15:24.191530    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:24.209057    2171 main.go:141] libmachine: Using SSH client type: native
I0615 21:15:24.209585    2171 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0615 21:15:24.209590    2171 main.go:141] libmachine: About to run SSH command:
hostname
I0615 21:15:24.210076    2171 main.go:141] libmachine: Error dialing TCP: ssh: handshake failed: read tcp 127.0.0.1:33882->127.0.0.1:32772: read: connection reset by peer
I0615 21:15:27.350080    2171 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0615 21:15:27.350090    2171 ubuntu.go:169] provisioning hostname "minikube"
I0615 21:15:27.350129    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:27.364163    2171 main.go:141] libmachine: Using SSH client type: native
I0615 21:15:27.364367    2171 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0615 21:15:27.364373    2171 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0615 21:15:27.522242    2171 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0615 21:15:27.522326    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:27.537262    2171 main.go:141] libmachine: Using SSH client type: native
I0615 21:15:27.537409    2171 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0615 21:15:27.537419    2171 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0615 21:15:27.659696    2171 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0615 21:15:27.659717    2171 ubuntu.go:175] set auth options {CertDir:/home/ubuntu/.minikube CaCertPath:/home/ubuntu/.minikube/certs/ca.pem CaPrivateKeyPath:/home/ubuntu/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/ubuntu/.minikube/machines/server.pem ServerKeyPath:/home/ubuntu/.minikube/machines/server-key.pem ClientKeyPath:/home/ubuntu/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/ubuntu/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/ubuntu/.minikube}
I0615 21:15:27.659738    2171 ubuntu.go:177] setting up certificates
I0615 21:15:27.659748    2171 provision.go:84] configureAuth start
I0615 21:15:27.659786    2171 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0615 21:15:27.673164    2171 provision.go:143] copyHostCerts
I0615 21:15:27.674971    2171 exec_runner.go:144] found /home/ubuntu/.minikube/ca.pem, removing ...
I0615 21:15:27.674979    2171 exec_runner.go:203] rm: /home/ubuntu/.minikube/ca.pem
I0615 21:15:27.675016    2171 exec_runner.go:151] cp: /home/ubuntu/.minikube/certs/ca.pem --> /home/ubuntu/.minikube/ca.pem (1078 bytes)
I0615 21:15:27.675476    2171 exec_runner.go:144] found /home/ubuntu/.minikube/cert.pem, removing ...
I0615 21:15:27.675480    2171 exec_runner.go:203] rm: /home/ubuntu/.minikube/cert.pem
I0615 21:15:27.675502    2171 exec_runner.go:151] cp: /home/ubuntu/.minikube/certs/cert.pem --> /home/ubuntu/.minikube/cert.pem (1119 bytes)
I0615 21:15:27.676001    2171 exec_runner.go:144] found /home/ubuntu/.minikube/key.pem, removing ...
I0615 21:15:27.676004    2171 exec_runner.go:203] rm: /home/ubuntu/.minikube/key.pem
I0615 21:15:27.676025    2171 exec_runner.go:151] cp: /home/ubuntu/.minikube/certs/key.pem --> /home/ubuntu/.minikube/key.pem (1675 bytes)
I0615 21:15:27.676427    2171 provision.go:117] generating server cert: /home/ubuntu/.minikube/machines/server.pem ca-key=/home/ubuntu/.minikube/certs/ca.pem private-key=/home/ubuntu/.minikube/certs/ca-key.pem org=ubuntu.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0615 21:15:28.032430    2171 provision.go:177] copyRemoteCerts
I0615 21:15:28.032491    2171 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0615 21:15:28.032517    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.047895    2171 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/ubuntu/.minikube/machines/minikube/id_rsa Username:docker}
I0615 21:15:28.137872    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I0615 21:15:28.166232    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/machines/server.pem --> /etc/docker/server.pem (1180 bytes)
I0615 21:15:28.186281    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0615 21:15:28.205946    2171 provision.go:87] duration metric: took 546.192847ms to configureAuth
I0615 21:15:28.205955    2171 ubuntu.go:193] setting minikube options for container-runtime
I0615 21:15:28.206074    2171 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0615 21:15:28.206104    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.224283    2171 main.go:141] libmachine: Using SSH client type: native
I0615 21:15:28.224423    2171 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0615 21:15:28.224429    2171 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0615 21:15:28.349781    2171 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0615 21:15:28.349795    2171 ubuntu.go:71] root file system type: overlay
I0615 21:15:28.349875    2171 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0615 21:15:28.349910    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.363971    2171 main.go:141] libmachine: Using SSH client type: native
I0615 21:15:28.364104    2171 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0615 21:15:28.364154    2171 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0615 21:15:28.501391    2171 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0615 21:15:28.501430    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.517145    2171 main.go:141] libmachine: Using SSH client type: native
I0615 21:15:28.517322    2171 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82d6e0] 0x830440 <nil>  [] 0s} 127.0.0.1 32772 <nil> <nil>}
I0615 21:15:28.517333    2171 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0615 21:15:28.648936    2171 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0615 21:15:28.648944    2171 machine.go:97] duration metric: took 4.45744171s to provisionDockerMachine
I0615 21:15:28.648953    2171 start.go:293] postStartSetup for "minikube" (driver="docker")
I0615 21:15:28.648967    2171 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0615 21:15:28.649006    2171 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0615 21:15:28.649033    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.662845    2171 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/ubuntu/.minikube/machines/minikube/id_rsa Username:docker}
I0615 21:15:28.757978    2171 ssh_runner.go:195] Run: cat /etc/os-release
I0615 21:15:28.760773    2171 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0615 21:15:28.760789    2171 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0615 21:15:28.760795    2171 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0615 21:15:28.760799    2171 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I0615 21:15:28.760805    2171 filesync.go:126] Scanning /home/ubuntu/.minikube/addons for local assets ...
I0615 21:15:28.761970    2171 filesync.go:126] Scanning /home/ubuntu/.minikube/files for local assets ...
I0615 21:15:28.762320    2171 start.go:296] duration metric: took 113.36052ms for postStartSetup
I0615 21:15:28.762365    2171 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0615 21:15:28.762390    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.777609    2171 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/ubuntu/.minikube/machines/minikube/id_rsa Username:docker}
I0615 21:15:28.865681    2171 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0615 21:15:28.869279    2171 fix.go:56] duration metric: took 5.147409003s for fixHost
I0615 21:15:28.869287    2171 start.go:83] releasing machines lock for "minikube", held for 5.147429233s
I0615 21:15:28.869327    2171 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0615 21:15:28.887283    2171 ssh_runner.go:195] Run: cat /version.json
I0615 21:15:28.887310    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.887417    2171 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0615 21:15:28.887452    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:28.900806    2171 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/ubuntu/.minikube/machines/minikube/id_rsa Username:docker}
I0615 21:15:28.902040    2171 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/ubuntu/.minikube/machines/minikube/id_rsa Username:docker}
I0615 21:15:29.189849    2171 ssh_runner.go:195] Run: systemctl --version
I0615 21:15:29.201121    2171 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0615 21:15:29.204760    2171 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0615 21:15:29.226800    2171 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0615 21:15:29.226842    2171 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0615 21:15:29.234316    2171 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0615 21:15:29.234323    2171 start.go:494] detecting cgroup driver to use...
I0615 21:15:29.234340    2171 detect.go:199] detected "systemd" cgroup driver on host os
I0615 21:15:29.236394    2171 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0615 21:15:29.252763    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0615 21:15:29.262311    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0615 21:15:29.271368    2171 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I0615 21:15:29.271396    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0615 21:15:29.280653    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0615 21:15:29.288860    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0615 21:15:29.298105    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0615 21:15:29.308221    2171 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0615 21:15:29.315589    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0615 21:15:29.324658    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0615 21:15:29.334221    2171 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0615 21:15:29.343726    2171 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0615 21:15:29.352115    2171 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0615 21:15:29.359046    2171 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0615 21:15:29.422023    2171 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0615 21:15:29.512747    2171 start.go:494] detecting cgroup driver to use...
I0615 21:15:29.512778    2171 detect.go:199] detected "systemd" cgroup driver on host os
I0615 21:15:29.512806    2171 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0615 21:15:29.526804    2171 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0615 21:15:29.526836    2171 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0615 21:15:29.541886    2171 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0615 21:15:29.559074    2171 ssh_runner.go:195] Run: which cri-dockerd
I0615 21:15:29.561951    2171 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0615 21:15:29.569344    2171 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0615 21:15:29.584435    2171 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0615 21:15:29.707112    2171 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0615 21:15:29.776167    2171 docker.go:574] configuring docker to use "systemd" as cgroup driver...
I0615 21:15:29.776299    2171 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0615 21:15:29.794035    2171 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0615 21:15:29.852446    2171 ssh_runner.go:195] Run: sudo systemctl restart docker
I0615 21:15:30.710804    2171 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0615 21:15:30.720800    2171 ssh_runner.go:195] Run: sudo systemctl stop cri-docker.socket
I0615 21:15:30.730862    2171 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0615 21:15:30.741764    2171 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0615 21:15:30.800785    2171 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0615 21:15:30.858071    2171 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0615 21:15:30.916986    2171 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0615 21:15:30.936718    2171 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0615 21:15:30.946063    2171 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0615 21:15:31.004000    2171 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0615 21:15:31.481548    2171 start.go:541] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0615 21:15:31.481590    2171 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0615 21:15:31.484835    2171 start.go:562] Will wait 60s for crictl version
I0615 21:15:31.484865    2171 ssh_runner.go:195] Run: which crictl
I0615 21:15:31.487853    2171 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0615 21:15:31.746784    2171 start.go:578] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  26.1.1
RuntimeApiVersion:  v1
I0615 21:15:31.746818    2171 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0615 21:15:31.961868    2171 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0615 21:15:31.988491    2171 out.go:204] * Preparing Kubernetes v1.30.0 on Docker 26.1.1 ...
I0615 21:15:31.988551    2171 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0615 21:15:32.005729    2171 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0615 21:15:32.009022    2171 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0615 21:15:32.021514    2171 kubeadm.go:877] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:15000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/ubuntu:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0615 21:15:32.021599    2171 preload.go:132] Checking if preload exists for k8s version v1.30.0 and runtime docker
I0615 21:15:32.021635    2171 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0615 21:15:32.037912    2171 docker.go:685] Got preloaded images: -- stdout --
grafana/grafana:11.0.0
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5
nginx:1.16.0

-- /stdout --
I0615 21:15:32.037921    2171 docker.go:615] Images already preloaded, skipping extraction
I0615 21:15:32.037953    2171 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0615 21:15:32.053882    2171 docker.go:685] Got preloaded images: -- stdout --
grafana/grafana:11.0.0
registry.k8s.io/kube-apiserver:v1.30.0
registry.k8s.io/kube-controller-manager:v1.30.0
registry.k8s.io/kube-scheduler:v1.30.0
registry.k8s.io/kube-proxy:v1.30.0
registry.k8s.io/etcd:3.5.12-0
registry.k8s.io/coredns/coredns:v1.11.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5
nginx:1.16.0

-- /stdout --
I0615 21:15:32.053890    2171 cache_images.go:84] Images are preloaded, skipping loading
I0615 21:15:32.053897    2171 kubeadm.go:928] updating node { 192.168.49.2 8443 v1.30.0 docker true true} ...
I0615 21:15:32.053987    2171 kubeadm.go:940] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.30.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0615 21:15:32.054019    2171 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0615 21:15:32.453846    2171 cni.go:84] Creating CNI manager for ""
I0615 21:15:32.453862    2171 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0615 21:15:32.453869    2171 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0615 21:15:32.453883    2171 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.30.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0615 21:15:32.454015    2171 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.30.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0615 21:15:32.454054    2171 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.30.0
I0615 21:15:32.467704    2171 binaries.go:44] Found k8s binaries, skipping transfer
I0615 21:15:32.467735    2171 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0615 21:15:32.475407    2171 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0615 21:15:32.492857    2171 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0615 21:15:32.507737    2171 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2149 bytes)
I0615 21:15:32.524903    2171 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0615 21:15:32.527711    2171 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0615 21:15:32.539905    2171 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0615 21:15:32.597476    2171 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0615 21:15:32.617651    2171 certs.go:68] Setting up /home/ubuntu/.minikube/profiles/minikube for IP: 192.168.49.2
I0615 21:15:32.617656    2171 certs.go:194] generating shared ca certs ...
I0615 21:15:32.617666    2171 certs.go:226] acquiring lock for ca certs: {Name:mk54be389229da646426b42cde5e43fe51d50235 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0615 21:15:32.617810    2171 certs.go:235] skipping valid "minikubeCA" ca cert: /home/ubuntu/.minikube/ca.key
I0615 21:15:32.618228    2171 certs.go:235] skipping valid "proxyClientCA" ca cert: /home/ubuntu/.minikube/proxy-client-ca.key
I0615 21:15:32.618235    2171 certs.go:256] generating profile certs ...
I0615 21:15:32.618301    2171 certs.go:359] skipping valid signed profile cert regeneration for "minikube-user": /home/ubuntu/.minikube/profiles/minikube/client.key
I0615 21:15:32.618733    2171 certs.go:359] skipping valid signed profile cert regeneration for "minikube": /home/ubuntu/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0615 21:15:32.619166    2171 certs.go:359] skipping valid signed profile cert regeneration for "aggregator": /home/ubuntu/.minikube/profiles/minikube/proxy-client.key
I0615 21:15:32.619322    2171 certs.go:484] found cert: /home/ubuntu/.minikube/certs/ca-key.pem (1679 bytes)
I0615 21:15:32.619343    2171 certs.go:484] found cert: /home/ubuntu/.minikube/certs/ca.pem (1078 bytes)
I0615 21:15:32.619370    2171 certs.go:484] found cert: /home/ubuntu/.minikube/certs/cert.pem (1119 bytes)
I0615 21:15:32.619389    2171 certs.go:484] found cert: /home/ubuntu/.minikube/certs/key.pem (1675 bytes)
I0615 21:15:32.619887    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0615 21:15:32.641630    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0615 21:15:32.663564    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0615 21:15:32.684553    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0615 21:15:32.705968    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0615 21:15:32.730096    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0615 21:15:32.751148    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0615 21:15:32.772168    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0615 21:15:32.792770    2171 ssh_runner.go:362] scp /home/ubuntu/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0615 21:15:32.813972    2171 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0615 21:15:32.829826    2171 ssh_runner.go:195] Run: openssl version
I0615 21:15:32.845128    2171 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0615 21:15:32.854796    2171 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0615 21:15:32.857642    2171 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jun 15 09:42 /usr/share/ca-certificates/minikubeCA.pem
I0615 21:15:32.857676    2171 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0615 21:15:32.863281    2171 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0615 21:15:32.870701    2171 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0615 21:15:32.873617    2171 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0615 21:15:32.880097    2171 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0615 21:15:32.886053    2171 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0615 21:15:32.893618    2171 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0615 21:15:32.902044    2171 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0615 21:15:32.909098    2171 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0615 21:15:32.914744    2171 kubeadm.go:391] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.44@sha256:eb04641328b06c5c4a14f4348470e1046bbcf9c2cbc551486e343d3a49db557e Memory:15000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.30.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/ubuntu:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0615 21:15:32.914820    2171 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0615 21:15:32.930854    2171 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
W0615 21:15:32.939999    2171 kubeadm.go:404] apiserver tunnel failed: apiserver port not set
I0615 21:15:32.940008    2171 kubeadm.go:407] found existing configuration files, will attempt cluster restart
I0615 21:15:32.940019    2171 kubeadm.go:587] restartPrimaryControlPlane start ...
I0615 21:15:32.940050    2171 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0615 21:15:32.950226    2171 kubeadm.go:129] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0615 21:15:32.951820    2171 kubeconfig.go:125] found "minikube" server: "https://192.168.49.2:8443"
I0615 21:15:32.976148    2171 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0615 21:15:32.983872    2171 kubeadm.go:624] The running cluster does not require reconfiguration: 192.168.49.2
I0615 21:15:32.983888    2171 kubeadm.go:591] duration metric: took 43.864747ms to restartPrimaryControlPlane
I0615 21:15:32.983895    2171 kubeadm.go:393] duration metric: took 69.158119ms to StartCluster
I0615 21:15:32.983904    2171 settings.go:142] acquiring lock: {Name:mk258534599bdb5598e04e5075c71f19dc4dcb51 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0615 21:15:32.983962    2171 settings.go:150] Updating kubeconfig:  /home/ubuntu/.kube/config
I0615 21:15:32.984454    2171 lock.go:35] WriteFile acquiring /home/ubuntu/.kube/config: {Name:mkc2dc10c32db64677e63d0b927f8be22de50f2a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0615 21:15:32.984627    2171 start.go:234] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.30.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0615 21:15:32.991891    2171 out.go:177] * Verifying Kubernetes components...
I0615 21:15:32.984734    2171 addons.go:502] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false yakd:false]
I0615 21:15:32.984847    2171 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.30.0
I0615 21:15:32.994831    2171 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0615 21:15:32.994840    2171 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0615 21:15:32.994848    2171 addons.go:234] Setting addon storage-provisioner=true in "minikube"
W0615 21:15:32.994854    2171 addons.go:243] addon storage-provisioner should already be in state true
I0615 21:15:32.994864    2171 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0615 21:15:32.994870    2171 host.go:66] Checking if "minikube" exists ...
I0615 21:15:32.994883    2171 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0615 21:15:32.995086    2171 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0615 21:15:32.995243    2171 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0615 21:15:33.013586    2171 out.go:177]   - Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0615 21:15:33.015122    2171 addons.go:426] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0615 21:15:33.015127    2171 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0615 21:15:33.015160    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:33.013779    2171 addons.go:234] Setting addon default-storageclass=true in "minikube"
W0615 21:15:33.015180    2171 addons.go:243] addon default-storageclass should already be in state true
I0615 21:15:33.015213    2171 host.go:66] Checking if "minikube" exists ...
I0615 21:15:33.015524    2171 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0615 21:15:33.029051    2171 addons.go:426] installing /etc/kubernetes/addons/storageclass.yaml
I0615 21:15:33.029058    2171 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0615 21:15:33.029089    2171 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0615 21:15:33.031565    2171 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/ubuntu/.minikube/machines/minikube/id_rsa Username:docker}
I0615 21:15:33.043362    2171 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32772 SSHKeyPath:/home/ubuntu/.minikube/machines/minikube/id_rsa Username:docker}
I0615 21:15:33.058367    2171 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0615 21:15:33.068347    2171 api_server.go:52] waiting for apiserver process to appear ...
I0615 21:15:33.068376    2171 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0615 21:15:33.132507    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0615 21:15:33.148646    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
W0615 21:15:33.542763    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:33.542779    2171 retry.go:31] will retry after 244.851488ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
W0615 21:15:33.542809    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:33.542819    2171 retry.go:31] will retry after 275.907813ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:33.568954    2171 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0615 21:15:33.788366    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml
I0615 21:15:33.819270    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml
W0615 21:15:33.837887    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:33.837902    2171 retry.go:31] will retry after 194.674857ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
W0615 21:15:33.873810    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:33.873829    2171 retry.go:31] will retry after 391.351369ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.033097    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml
I0615 21:15:34.069136    2171 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0615 21:15:34.090226    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.090241    2171 retry.go:31] will retry after 373.208396ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.265581    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml
W0615 21:15:34.319663    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.319681    2171 retry.go:31] will retry after 556.778977ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.464494    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml
W0615 21:15:34.514925    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.514940    2171 retry.go:31] will retry after 456.516632ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.569187    2171 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0615 21:15:34.579917    2171 api_server.go:72] duration metric: took 1.595273961s to wait for apiserver process to appear ...
I0615 21:15:34.579931    2171 api_server.go:88] waiting for apiserver healthz status ...
I0615 21:15:34.579943    2171 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0615 21:15:34.580199    2171 api_server.go:269] stopped: https://192.168.49.2:8443/healthz: Get "https://192.168.49.2:8443/healthz": dial tcp 192.168.49.2:8443: connect: connection refused
I0615 21:15:34.877415    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml
W0615 21:15:34.933291    2171 addons.go:452] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.933306    2171 retry.go:31] will retry after 535.054931ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp 127.0.0.1:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0615 21:15:34.972503    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml
I0615 21:15:35.080617    2171 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0615 21:15:35.469385    2171 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml
I0615 21:15:36.385599    2171 api_server.go:279] https://192.168.49.2:8443/healthz returned 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
W0615 21:15:36.385661    2171 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
I0615 21:15:36.385677    2171 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0615 21:15:36.390344    2171 api_server.go:279] https://192.168.49.2:8443/healthz returned 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
W0615 21:15:36.390358    2171 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
I0615 21:15:36.580658    2171 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0615 21:15:36.584269    2171 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/apiservice-discovery-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0615 21:15:36.584287    2171 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/apiservice-discovery-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0615 21:15:36.805149    2171 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: (1.832627509s)
I0615 21:15:36.805236    2171 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.30.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: (1.335836638s)
I0615 21:15:36.816459    2171 out.go:177] * Enabled addons: storage-provisioner, default-storageclass
I0615 21:15:36.818730    2171 addons.go:505] duration metric: took 3.83398785s for enable addons: enabled=[storage-provisioner default-storageclass]
I0615 21:15:37.080893    2171 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0615 21:15:37.084015    2171 api_server.go:279] https://192.168.49.2:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/apiservice-discovery-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
W0615 21:15:37.084025    2171 api_server.go:103] status: https://192.168.49.2:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-service-ip-repair-controllers ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/apiservice-discovery-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
healthz check failed
I0615 21:15:37.580624    2171 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0615 21:15:37.585879    2171 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I0615 21:15:37.586505    2171 api_server.go:141] control plane version: v1.30.0
I0615 21:15:37.586514    2171 api_server.go:131] duration metric: took 3.00657912s to wait for apiserver health ...
I0615 21:15:37.586525    2171 system_pods.go:43] waiting for kube-system pods to appear ...
I0615 21:15:37.591639    2171 system_pods.go:59] 7 kube-system pods found
I0615 21:15:37.591650    2171 system_pods.go:61] "coredns-7db6d8ff4d-j9bfd" [9c774f02-bd49-4c5d-8292-b6586da4b928] Running
I0615 21:15:37.591653    2171 system_pods.go:61] "etcd-minikube" [ce53f2fb-8350-42de-9561-de38f6f60070] Running
I0615 21:15:37.591656    2171 system_pods.go:61] "kube-apiserver-minikube" [0293ee0a-025f-4c31-bf24-79bb02c3976f] Running
I0615 21:15:37.591658    2171 system_pods.go:61] "kube-controller-manager-minikube" [9bba14e0-ed0d-42ef-bc16-ae3ceb60e398] Running
I0615 21:15:37.591660    2171 system_pods.go:61] "kube-proxy-pjck9" [f2cd87de-3d63-4ff8-b0c6-c095bbf9abb8] Running
I0615 21:15:37.591662    2171 system_pods.go:61] "kube-scheduler-minikube" [61a75d9e-047a-4166-9408-4acd7e7460d4] Running
I0615 21:15:37.591664    2171 system_pods.go:61] "storage-provisioner" [c84e6874-3c9d-4ee0-b360-42cc57d35386] Running
I0615 21:15:37.591667    2171 system_pods.go:74] duration metric: took 5.138441ms to wait for pod list to return data ...
I0615 21:15:37.591674    2171 kubeadm.go:576] duration metric: took 4.607033035s to wait for: map[apiserver:true system_pods:true]
I0615 21:15:37.591682    2171 node_conditions.go:102] verifying NodePressure condition ...
I0615 21:15:37.594926    2171 node_conditions.go:122] node storage ephemeral capacity is 19221248Ki
I0615 21:15:37.594937    2171 node_conditions.go:123] node cpu capacity is 36
I0615 21:15:37.594952    2171 node_conditions.go:105] duration metric: took 3.266846ms to run NodePressure ...
I0615 21:15:37.594960    2171 start.go:240] waiting for startup goroutines ...
I0615 21:15:37.594965    2171 start.go:245] waiting for cluster config update ...
I0615 21:15:37.594972    2171 start.go:254] writing updated cluster config ...
I0615 21:15:37.595150    2171 ssh_runner.go:195] Run: rm -f paused
I0615 21:15:37.654102    2171 start.go:600] kubectl: 1.30.2, cluster: 1.30.0 (minor skew: 0)
I0615 21:15:37.657231    2171 out.go:177] * Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
